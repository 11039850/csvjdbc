/* Generated By:JavaCC: Do not edit this line. ExpressionParserConstants.java */
package org.relique.jdbc.csv;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int UNSIGNEDNUMBER = 4;
  /** RegularExpression Id. */
  int DIGITS = 5;
  /** RegularExpression Id. */
  int EXPONENT = 6;
  /** RegularExpression Id. */
  int NULL = 7;
  /** RegularExpression Id. */
  int AND = 8;
  /** RegularExpression Id. */
  int OR = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int IS = 11;
  /** RegularExpression Id. */
  int AS = 12;
  /** RegularExpression Id. */
  int LIKE = 13;
  /** RegularExpression Id. */
  int BETWEEN = 14;
  /** RegularExpression Id. */
  int PLACEHOLDER = 15;
  /** RegularExpression Id. */
  int NAME = 16;
  /** RegularExpression Id. */
  int STRING = 17;
  /** RegularExpression Id. */
  int RELOP = 18;
  /** RegularExpression Id. */
  int ASTERISK = 19;
  /** RegularExpression Id. */
  int MINUS = 20;
  /** RegularExpression Id. */
  int BINOP = 21;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<UNSIGNEDNUMBER>",
    "<DIGITS>",
    "<EXPONENT>",
    "\"NULL\"",
    "\"AND\"",
    "\"OR\"",
    "\"NOT\"",
    "\"IS\"",
    "\"AS\"",
    "\"LIKE\"",
    "\"BETWEEN\"",
    "\"?\"",
    "<NAME>",
    "<STRING>",
    "<RELOP>",
    "\"*\"",
    "\"-\"",
    "<BINOP>",
    "\"(\"",
    "\")\"",
  };

}
